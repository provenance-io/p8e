syntax = "proto3";

package contract;

option go_package          = "github.com/provenance-io/provenance/x/metadata/legacy/v039";
option java_package        = "io.provenance.metadata.v0";
option java_multiple_files = true;

import "gogoproto/gogo.proto";
import "provenance/metadata/v0/spec.proto";
import "provenance/metadata/v0/types.proto";

import "google/protobuf/timestamp.proto";

message Recital {
  types.PartyType                      signer_role = 1;
  types.SigningAndEncryptionPublicKeys signer      = 2;
  bytes                                address     = 3;
}

message Recitals {
  repeated Recital parties = 1;
}

message Contract {
  spec.DefinitionSpec definition = 1;

  // Points to the proto for the contractSpec
  types.Fact spec = 2;

  // Invoker of this contract
  types.SigningAndEncryptionPublicKeys invoker = 3;

  // Constructor arguments.
  // These are always the output of a previously recorded consideration.
  repeated types.Fact inputs = 4;

  repeated contract.Condition conditions         = 5;
  repeated contract.Consideration considerations = 6;

  repeated contract.Recital recitals = 7;

  int32 times_executed = 8;

  // This is only set once when the contract is initially executed
  google.protobuf.Timestamp start_time = 9
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"start_time\""];
  ;
}

message Condition {
  string                   condition_name = 1;
  contract.ExecutionResult result         = 2;
}

message Consideration {
  string consideration_name = 1;

  // Data pushed to a consideration that will ultimately match the output_spec of the consideration
  repeated contract.ProposedFact inputs = 2;

  contract.ExecutionResult result = 3;
}

// Input to a consideration defined at runtime, and emitted as a proposed fact for inclusion on the blockchain.
message ProposedFact {
  string                    name      = 1;
  string                    hash      = 2;
  string                    classname = 3;
  types.ProvenanceReference ancestor  = 4;
}

enum ExecutionResultType {
  RESULT_TYPE_UNKNOWN = 0;
  RESULT_TYPE_PASS    = 1;
  // Couldn't process the condition/consideration due to missing facts being generated by other considerations.
  RESULT_TYPE_SKIP = 2;
  RESULT_TYPE_FAIL = 3;
}

message ExecutionResult {
  contract.ProposedFact        output      = 1;
  contract.ExecutionResultType result      = 2;
  google.protobuf.Timestamp    recorded_at = 3
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"recorded_at\""];
  ;
  string error_message = 4;
}