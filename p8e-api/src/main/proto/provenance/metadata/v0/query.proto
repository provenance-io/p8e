syntax = "proto3";
package query;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "provenance/metadata/v0/scope.proto";

option go_package = "github.com/provenance-io/provenance/x/metadata/legacy/v039";

option java_package        = "io.provenance.metadata.v0";
option java_multiple_files = true;

// Query defines the Metadata Query service.
service Query {
  // Scope returns a specific scope by id
  rpc Scope(ScopeRequest) returns (ScopeResponse) {
    option (google.api.http).get = "/provenance/metadata/v0/scope/{scope_id}";
  }
}

// ScopeRequest is used for requesting a scope by id
message ScopeRequest {
  string scope_id = 1;
}

// ScopeResponse is the response to a scope request.
message ScopeResponse {
  scope.Scope scope = 1 [(gogoproto.nullable) = false];
}