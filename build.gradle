buildscript {
    rootProject.apply {
        from(rootProject.file("versions.gradle"))
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }

    if (JavaVersion.current() != JavaVersion.VERSION_11) {
        throw new GradleException("This build must be run with Java 11.")
    }
}

allprojects {
    group = 'io.provenance.p8e'
    version = project.hasProperty("version") ? (project.property("version") != "unspecified" ? project.property("version") : '1.0-SNAPSHOT') : '1.0-SNAPSHOT'

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'kotlin'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        jcenter()
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

        implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
        implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
        implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"

        implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
        implementation 'org.slf4j:log4j-over-slf4j:1.7.30'
        implementation "javax.inject:javax.inject:1"

        implementation "com.fortanix:sdkms-client:3.23.1408"

        testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.8.0'
        testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
        testImplementation 'org.mockito:mockito-inline:3.8.0'

        testCompileOnly("junit:junit:$junit_version")
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$jupiter_version"
        testImplementation("org.junit.jupiter:junit-jupiter-api:$jupiter_version")
        testRuntimeOnly(
                "org.junit.jupiter:junit-jupiter-engine:$jupiter_version",
                "org.junit.vintage:junit-vintage-engine:$jupiter_version"
        )
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    test {
        useJUnitPlatform {
            excludeTags 'intTest'
            includeEngines 'junit-jupiter', 'junit-vintage'
        }
    }

    if (['p8e-common',
         'p8e-contract-base',
         'p8e-engine',
         'p8e-proto-internal',
         'p8e-index-client',
         'p8e-index-domain',
         'p8e-util',
         'p8e-sdk',
         'p8e-shared',
         'p8e-encryption',
         'mailbox-client',
         'os-client',
         'os-proto'
    ].contains(it.name)) {
        def moduleName = it.name

        apply plugin: 'maven-publish'

        publishing {
            repositories {
                maven {
                    name = "GitHubPackages"
                    url = "https://maven.pkg.github.com/provenance-io/p8e"
                    credentials {
                        username = System.getenv("GITHUB_ACTOR")
                        password = System.getenv("GITHUB_TOKEN")
                    }
                }
            }

            publications {
                maven(MavenPublication) {
                    groupId = group
                    artifactId = "$moduleName"
                    version = version

                    from components.java
                }
            }
        }
    }
}
